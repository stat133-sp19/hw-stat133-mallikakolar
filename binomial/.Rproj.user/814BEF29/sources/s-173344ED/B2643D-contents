---
title: "lec wk 12"
author: "Mallika Kolar"
date: "4/22/2019"
output: html_document
---

# R packages

- file structure
- coding/ programming
  - writing functions, testing functions
  
# anatomy of an R png
- minimal and mandatory
    ~pkg/
      ~R/             --> directory where you put all your functions (in R scripts)
      ~man/           --> manual documentation of the package (files for the mannual documentation)
                            ex: help documentation
      ~DESCRIPTION    --> plain text file
                            metadata of the package ("business card")
      ~NAMESPACE      --> plain text files
                            lists the imports and exports directives
                            specify other dependicies, if this package relies on other packages

** NAMESPACE ex: 2 packages thata have same name but different functions
          "mypkg" --> fun() 
          "youpkg" --> fun()
          library(mypkg)
          library(youpkg)
          a <- fun()       # how does R know which function to use
            a <- youpkg::fun()
       
** example
  
  R/
    function1.R ==> use Roxygen comments for all the functions
    function2.R ==>     #' @title some title
                        #' @description some description
                        #' @param x numeric vector
                        #' @return what object gets returned
                        #' @export name will appear on the NAMESPACE file
                        #' @examples 

-  EXAMPLE: 
            #' @description Average
            #' @param computes arithmetic average
            #' @return what object gets returned
            #' @export name will appear on the NAMESPACE file
            #' @examples 
            #' average(1:5)
            #' average(c(1:4, NA), na.rm = TRUE)
            average <- function(x){
            sum(x)/ length(x)
            }
            
- must kill NAMESPACE to use devtools
    devtools::document()
    devtools::check_man()
    devtools::build()
    
# package states (theoretical flow)
- source
- bundle
    gets compressed
- binary
    generate a binary version --> operating syste dependent
- installed
- in-memory

# devtools package
* run commands in the r console once you are in the .Rproj working directory
    if not in .Rproj working directory, you must write the approporate path first
* allows you to build or specify various parts of a package
- a vignette is a freindly user-friendly tutorial
- devtools::check()   --> must do this locally and pass to send it to CRAN
      **** DO NOT need to use this function for workout 3

- devtools::use_test()  --> creates test folder, with r script files
                        --> added a new section ot DESCRIPTION folder (suggests: testthat)

# add vignettes for package

devtools::use_vignette(name = "Introduction to pkg") --> does the same thing as testthat
